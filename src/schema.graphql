scalar JSON

schema {
    query: Query
    mutation: Mutation
}

type Query {
    cities: [City]
    activities: [Activity]
    socialProvider: SocialProvider
    socialProviders: [SocialProvider]
    paymentProviders: [PaymentProvider]
    contactProviders: [ContactProvider]
    volunteersSearch(input: SearchInput): [Volunteer]
    volunteer(input: VolunteerByIdInput!): Volunteer
    volunteerSocial(input: VolunteerByIdInput!): VolunteerSocial
    volunteerContact(input: VolunteerByIdInput!): VolunteerContact
    volunteerPaymentOption(input: VolunteerByIdInput!): VolunteerPaymentOption
    profile(input: VolunteerByIdInput!): Volunteer
}

type Mutation {
    createProfile(input: CreateProfileInput): Volunteer
    updateProfile(input: UpdateProfileInput): Volunteer
    hideProfile(input: HideProfileInput): Volunteer
}

input CreateProfileInput {
    authId: String!
    firstName: String!
    lastName: String!
    description: String!
    organization: String!
    cityIds: [String!]!
    activityIds: [String!]!
    social: [CreateVolunteerSocialInput!]!
    paymentOptions: [CreateVolunteerPaymentOptionInput!]!
    contacts: [CreateVolunteerContactInput!]
}

input UpdateProfileInput {
    volunteerId: String!
    firstName: String
    lastName: String
    description: String
    organization: String
    cityIds: [String!]
    activityIds: [String!]
    social: CreateOrDeleteVolunteerSocialInput
    contacts: CreateOrDeleteVolunteerContactInput
    paymentOptions: CreateOrDeleteVolunteerPaymentOptionInput
}

input CreateOrDeleteVolunteerSocialInput {
    create: [CreateVolunteerSocialInput!]
    delete: [String!]
}

input CreateVolunteerSocialInput {
    url: String!
    socialProviderId: String!
}

input CreateOrDeleteVolunteerContactInput {
    create: [CreateVolunteerContactInput!]
    delete: [String!]
}

input CreateVolunteerContactInput {
    metadata: JSON!
    contactProviderId: String!
}

input CreateOrDeleteVolunteerPaymentOptionInput {
    create: [CreateVolunteerPaymentOptionInput!]
    delete: [String!]
}

input CreateVolunteerPaymentOptionInput {
    metadata: JSON!
    paymentProviderId: String!
}

input HideProfileInput {
    volunteerId: String!
}

input VolunteerByIdInput {
    id: String!
}

type VolunteerResponse {
    volunteer: Volunteer
}

input SearchInput {
    cityIds: [String!]
    activityIds: [String!]
}

type Volunteer {
    id: String!
    firstName: String!
    lastName: String!
    description: String!
    organization: String!
    verificationStatus: String!
    cities: [City!]!
    activities: [Activity!]!
    social: [VolunteerSocial!]!
    payments: [VolunteerPaymentOption!]!
    contacts: [VolunteerContact]
}

type VolunteerContact {
    id: String!
    metadata: JSON!
    volunteerId: String!
    providerId: String!
    provider: ContactProvider
}

type VolunteerPaymentOption {
    id: String!
    metadata: JSON!
    volunteerId: String!
    providerId: String!
    provider: PaymentProvider
}

type VolunteerSocial {
    id: String!
    url: String!
    volunteerId: String!
    providerId: String!
    provider: SocialProvider
}

type Activity {
    id: String!
    title: String!
}

type City {
    id: String!
    title: String!
}

type PaymentProvider {
    id: String!
    title: String!
}

type SocialProvider {
    id: String!
    title: String!
}

type ContactProvider {
    id: String!
    title: String!
}

enum VerificationStatus {
    requested,
    inProgress,
    rejected,
    verified,
    banned
}
