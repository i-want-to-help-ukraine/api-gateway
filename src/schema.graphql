schema {
    query: Query
    mutation: Mutation
}

type Query {
    cities: [City]
    activities: [VolunteerActivity]
    socialProviders: [SocialProvider]
    paymentProviders: [PaymentProvider]
    volunteersSearch(input: SearchInput): [Volunteer]
    volunteer(input: VolunteerByIdInput!): Volunteer
}

type Mutation {
    createVolunteer(input: CreateVolunteerInput): Volunteer
}

input CreateVolunteerInput {
    name: String!
    citiesIds: [String!]!
    activitiesIds: [String!]!
    social: [CreateVolunteerSocialInput!]!
    paymentOptions: [CreateVolunteerPaymentOptionInput!]!
}

input CreateVolunteerSocialInput {
    url: String!
    socialProviderId: String!
}

input CreateVolunteerPaymentOptionInput {
    metadata: String!
    paymentProviderId: String!
}

input VolunteerByIdInput {
    id: String!
}

type VolunteerResponse {
    volunteer: Volunteer
}

input SearchInput {
    citiesIds: [String]
    activitiesIds: [String]
    paymentOptionsIds: [String]
}

type Volunteer {
    id: String!
    name: String!
    cities: [City!]!
    activities: [VolunteerActivity!]!
    social: [VolunteerSocial!]!
    payments: [VolunteerPaymentOption!]!
}

type VolunteerPaymentOption {
    id: String!
    metadata: String!
}

type VolunteerSocial {
    id: String!
    url: String!
}

type VolunteerActivity {
    id: String!
    title: String!
}

type City {
    id: String
    title: String
}

type PaymentProvider {
    id: String
    title: String
}

type SocialProvider {
    id: String
    title: String
}
